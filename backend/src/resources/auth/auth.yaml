tags:
  name: Auth
  description: Endpoints de autenticação

paths:
  /auth/signup:
    post:
      summary: Cria um novo usuário
      tags: [Auth]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupDto'
        required: true
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsuarioResponse'
        '400':
          description: Já existe um usuário com o email informado.
          content:
            application/json:
              schema:
                type: object
                example: { msg: 'Já existe um usuário com o email informado' }

  /auth/login:
    post:
      summary: Faz login de um usuário
      tags: [Auth]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
        required: true
      responses:
        '200':
          description: Usuário logou com sucesso.
          content:
            application/json:
              schema:
                type: object
                example: { msg: 'Usuário logou com sucesso' }
        '401':
          description: A senha e/ou email estão incorretos.
          content:
            application/json:
              schema:
                type: object
                example: { msg: 'A senha e/ou email estão incorretos' }

  /auth/logout:
    post:
      summary: Faz logout de um usuário
      tags: [Auth]
      responses:
        '200':
          description: O logout foi feito com sucesso!
          content:
            application/json:
              schema:
                type: object
                example: { msg: 'O logout foi feito com sucesso!' }
        '400':
          description: O usuário não está logado.
          content:
            application/json:
              schema:
                type: object
                example: { msg: 'O usuário não está logado!' }

components:
  schemas:
    SignupDto:
      type: object
      properties:
        nome:
          type: string
          description: Nome do usuário.
          example: João Silva
        email:
          type: string
          description: Endereço de e-mail do usuário.
          example: joao.silva@example.com
        senha:
          type: string
          description: Senha do usuário.
          example: senha123
    LoginDto:
      type: object
      properties:
        email:
          type: string
          description: Endereço de e-mail do usuário.
          example: joao.silva@example.com
        senha:
          type: string
          description: Senha do usuário.
          example: senha123
    UsuarioResponse:
      type: object
      properties:
        usuario:
          $ref: '#/components/schemas/Usuario'
